package com.xuyurepos.service.impl.manager;

import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.xuyurepos.common.analysis.BigDataExcelOutWrite;
import com.xuyurepos.common.util.DateUtil;
import com.xuyurepos.common.util.ProsUtil;
import com.xuyurepos.entity.system.SystemUser;
import com.xuyurepos.service.manager.XuyuContentCardInfoImportService;
@Service
@Transactional
public class XuyuContentCardInfoImportServiceImpl implements XuyuContentCardInfoImportService{

	@Override
	public Map<String, Object> exportModel() {
		Map<String ,Object> map=new HashMap<String,Object>();
		try {
			HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
			String type=request.getParameter("type");
		    String nowdate = DateUtil.convert(new Date(), "yyyy_MM_dd_HH_mm_ss");
			String nowdate1 = DateUtil.convert(new Date(), "yyyyMMdd");
			
			SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
			String userId=systemUser.getUserName();
			String filename="export_" + userId +"_"+ nowdate +".xlsx";
			String sheetName="Sheet";
			String filepath="";
			String path="";
			// 获取生成文件的路径
	        StringBuilder builder = new StringBuilder();
	        builder.append(ProsUtil.getProperty("exportPath")+File.separator+nowdate1);
	        // 查看目录是否存在
	        File file = new File(builder.toString());
			if (!file.exists()) {
				file.mkdir();
			}
	        if (!builder.toString().endsWith(File.separator)) {
	            builder.append(File.separator);
	        }
	        path=builder.toString();
	        filepath = path+filename;
	        
	        String sql = "";
	        if("1".equals(type)){
	        	String[] colmnsList = {
	        			"接入号",
	        			"卡号备注",
	        			"IMSI",
	        			"ICCID",
	        			"企业ID",
	        			"群组",
	        			"物联卡状态",
	        			"工作状态",
	        			"本月累计使用流量（MB）",
	        			"本月累计使用短信（条）",
	        			"开户日期",
	        			"激活日期",
	        			"是否签约短信服务",
	        			"是否签约数据服务"

			  	};
				// 字段映射
				Map<String, String> fieldLabel=new HashMap<String, String>();
				BigDataExcelOutWrite bdeo = new BigDataExcelOutWrite(filepath,sheetName,"",colmnsList,fieldLabel);
				bdeo.WriteExcel(true,null,null);

				map.put("filename", filename);
				map.put("annexeName", "移动数据更新模板.xlsx");
				map.put("filepath", path);
	        }else if("2".equals(type)){
	        	String[] colmnsList = {
	        			"ICCID"
			  			,"周期累计用量 (MB)"
			  			,"在线"
			  			,"MSISDN"
			  			,"客户"	
			  			,"资费计划"	
			  			,"已达到用量限额"	
			  			,"SIM 卡状态	"
			  			,"已激活"	
			  			,"迁移的 SIM 卡"
			  	};
				// 字段映射
				Map<String, String> fieldLabel=new HashMap<String, String>();
				BigDataExcelOutWrite bdeo = new BigDataExcelOutWrite(filepath,sheetName,"",colmnsList,fieldLabel);
				bdeo.WriteExcel(true,null,null);
				map.put("filename", filename);
				map.put("annexeName", "联通数据更新模板.xlsx");
				map.put("filepath", path);
	        }else if("3".equals(type)){
	        	String[] colmnsList = {
	        			"ICCID"	
	        			,"接入号码"	
	        			,"SIM卡状态"	
	        			,"最近状态变更时间"	
	        			,"客户编码"	
	        			,"客户名称"	
	        			,"主产品"
	        			,"断网状态"	
	        			,"断网类型"	
	        			,"当月用量"	
	        			,"归属群组"	
	        			,"4G IMSI"	
	        			,"3G IMSI"	
	        			,"行业类型"	
	        			,"用户发展时间"	
	        			,"激活时间"	
	        			,"标签"
			  	};
				// 字段映射
				Map<String, String> fieldLabel=new HashMap<String, String>();
				BigDataExcelOutWrite bdeo = new BigDataExcelOutWrite(filepath,sheetName,"",colmnsList,fieldLabel);
				bdeo.WriteExcel(true,null,null);
				map.put("filename", filename);
				map.put("annexeName", "电信数据更新模板.xlsx");
				map.put("filepath", path);
	        }
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return map;
	}

}
