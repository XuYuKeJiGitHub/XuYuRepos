package com.xuyurepos.common;

 
import java.io.*;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.Map.Entry;

import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

import com.alipay.util.UniqueOrderGenerate;
 
 
public class WriteWordUtil {
 
    public static void main(String[] args) throws IOException {
    	 String srcPath = "D:\\交通意外确认函.docx";
         String destPath = "D:\\交通意外确认函-" + System.currentTimeMillis() + ".docx";
  
         InputStream in = new FileInputStream(srcPath);
         InputStream in1 = new FileInputStream(srcPath);
         FileOutputStream out = new FileOutputStream(destPath);
         Map<String, String> map = new LinkedHashMap<>();
         map.put("${a}", "1");
         map.put("${b}", "2");
         map.put("${c}", "3");
         map.put("${amount}", "1368");
         replaceText(in,in1, out, map);
         in1.close();
         in.close();
         out.close();
    }
    
    private static Map<String,Object> getMap(InputStream inputStream,Map<String, String> map){
    	Map<String,Object> mapp=new  LinkedHashMap<String,Object>();
        try {
            XWPFDocument document;//= new XWPFDocument(POIXMLDocument.openPackage(srcPath));
            document = new XWPFDocument(inputStream);
            //1. 替换段落中的指定文字
            Iterator<XWPFParagraph> itPara = document.getParagraphsIterator();
            String text;
            Set<String> set;
            XWPFParagraph paragraph;
            List<XWPFRun> run;
            String key;
            String value="";
            int valuei=0;
            Map<String,Object> mapKey=new  HashMap<String,Object>();
            while (itPara.hasNext()) {
                paragraph = itPara.next();
                set = map.keySet();
                Iterator<String> iterator = set.iterator();
                while (iterator.hasNext()) {
                    key = iterator.next();
                    run = paragraph.getRuns();
                    String a="";
                    for (int i = 0, runSie = run.size(); i < runSie; i++) {
                        text = run.get(i).getText(run.get(i).getTextPosition());
                        if(key.indexOf(text)!=-1){
                        	 a=a+text;
                        	 if(text.indexOf("{")!=-1){
                        		 if(mapp.get(key+"start")==null){
                        			 if(mapKey.get(""+i)==null){
                        				 mapp.put(key+"start", i);
                            			 mapKey.put(""+i, key);
                        			 }
                        		 }
                        	 }
                        	 if(text.indexOf("}")!=-1){
                        		 if(map.get(a)!=null){
                        			 mapp.put(a+"end", i);
                        		 }
                        		 a="";
                        		
                        	 }
                        }
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return mapp;
    }
 
    public static void replaceText(InputStream inputStream,InputStream inputStream1, OutputStream outputStream, Map<String, String> map) {
        try {
            XWPFDocument document;//= new XWPFDocument(POIXMLDocument.openPackage(srcPath));
            document = new XWPFDocument(inputStream);
            //1. 替换段落中的指定文字
            Iterator<XWPFParagraph> itPara = document.getParagraphsIterator();
            String text;
            Set<String> set;
            XWPFParagraph paragraph;
            List<XWPFRun> run;
            String key;
            String value="";
            int valuei=0;
            Map<String,Object> mapp=getMap(inputStream1, map);
            while (itPara.hasNext()) {
                paragraph = itPara.next();
                set = map.keySet();
                Iterator<String> iterator = set.iterator();
                while (iterator.hasNext()) {

                    key = iterator.next();
                    run = paragraph.getRuns();
                    for (int i = 0, runSie = run.size(); i < runSie; i++) {
                        text = run.get(i).getText(run.get(i).getTextPosition());
                        if((""+i).equals(""+mapp.get(key+"start"))){
                        	System.out.println("找到"+key);
                        	run.get(i).setText(map.get(key), 0);
                        }else{
                        	// 其他的值全部删除
                        	if(key.indexOf(text)!=-1){
                        		run.get(i).setText("", 0);
                        	}
                        }
                    }
                }
            }
            //3.输出流
            document.write(outputStream);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
 
}