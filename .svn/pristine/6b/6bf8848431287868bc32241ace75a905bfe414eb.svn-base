package com.xuyurepos.service.impl.manager;

import java.math.BigDecimal;
import java.util.HashMap;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.xuyurepos.common.constants.SystemConstants;
import com.xuyurepos.common.log.LoggerFactory;
import com.xuyurepos.common.page.PageModel;
import com.xuyurepos.common.util.StringUtil;
import com.xuyurepos.dao.manager.XuyuContentCardInfoDao;
import com.xuyurepos.dao.manager.XuyuContentCardInfoRecordDao;
import com.xuyurepos.dao.manager.XuyuContentCardMgrDao;
import com.xuyurepos.entity.manager.XuyuContentCardInfo;
import com.xuyurepos.entity.manager.XuyuContentCardInfoRecord;
import com.xuyurepos.entity.manager.XuyuContentCardMgr;
import com.xuyurepos.entity.system.SystemUser;
import com.xuyurepos.service.intergration.batch.SynInfoBatchService;
import com.xuyurepos.service.manager.XuyuContentCardMgrSelfService;
import com.xuyurepos.service.system.SystemOrgService;
import com.xuyurepos.vo.manager.XuyuContentCardMgrSelfVo;
import com.xuyurepos.vo.manager.XuyuContentCardMgrVo;
import com.xuyurepos.vo.system.SystemOrgVo;
@Transactional
@Service
public class XuyuContentCardMgrSelfServiceImpl implements XuyuContentCardMgrSelfService{
	
	Logger logger=LoggerFactory.getInstance().getLogger(XuyuContentCardMgrServiceImpl.class);

	@Resource
	private XuyuContentCardMgrDao xuyuContentCardMgrDao;
	@Resource
	private XuyuContentCardInfoDao xuyuContentCardInfoDao;
	@Resource
	private XuyuContentCardInfoRecordDao xuyuContentCardInfoRecordDao;
	@Resource
	private SystemOrgService systemOrgService;
	@Resource
	private SynInfoBatchService synInfoBatchService;

	@SuppressWarnings({ "rawtypes", "unchecked" })
	@Override
	public void findList(PageModel pageModel) {
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			// 总部用户不需要划卡
			pageModel.setRows(xuyuContentCardMgrDao.selectListWithPage(pageModel));
		    pageModel.setTotal(xuyuContentCardMgrDao.selectCountWithPage(pageModel));
		    logger.info("总部用户查询");
		}else{
			// 代理商用户开始划卡
			logger.info("代理商划卡查询");
			XuyuContentCardMgrSelfVo xuyuContentCardMgrSelfVo=(XuyuContentCardMgrSelfVo)pageModel.getQueryObj();
			String agency=systemOrgVo.getOrgId();
			if(systemOrgVo.getOrgLevel().equals("2")){
				agency=agency.substring(0,agency.length()-1);
			}
			logger.info("agency:"+agency);
			xuyuContentCardMgrSelfVo.setAgency(agency);
			pageModel.setRows(xuyuContentCardInfoDao.selectUserListWithPage(pageModel));
		    pageModel.setTotal(xuyuContentCardInfoDao.selectUserCountWithPage(pageModel));
		}
		
	}

	@Override
	public XuyuContentCardMgrVo find(String id) {
		XuyuContentCardMgrVo xuyuContentCardMgrVo=new XuyuContentCardMgrVo();
		if(!StringUtil.isEmpty(id)){
			XuyuContentCardMgr xuyuContentCardMgr=xuyuContentCardMgrDao.find(id);
			BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardMgrVo);
			xuyuContentCardMgrVo.setId(id);
		}
		return xuyuContentCardMgrVo;
	}
    
	/**
	 * 批量出库
	 */
	@Override
	public void selfAll(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) {
		// 先判断是否为卡段处理
		if(xuyuContentCardMgrVo!=null){
			if(SystemConstants.STRING_YES.equals(xuyuContentCardMgrVo.getYesNo())){
				useAccessNum(xuyuContentCardMgrVo);
			}else{
				noUseAccessNum(xuyuContentCardMgrVo);
			}
		}
	}
	
	/**
	 * 使用卡段出库
	 * @param xuyuContentCardMgrVo
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	private void useAccessNum(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo){
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			// 类型判定是否为总部出库
			XuyuContentCardMgr xuyuContentCardMgr=new XuyuContentCardMgr();
			xuyuContentCardMgr.setManagerFlag(SystemConstants.STRING_YES);
			xuyuContentCardMgr.setAgency(xuyuContentCardMgrVo.getAgency());
			xuyuContentCardMgr.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
			HashMap map=new HashMap();
			map.put("xuyuContentCardMgr", xuyuContentCardMgr);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardMgrDao.updateInfo(map);
			// 插入info表
			XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
			BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfo);
			map=new HashMap();
			map.put("xuyuContentCardInfo", xuyuContentCardInfo);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardInfoDao.insertInfo(map);
			// 插入明细表
			XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
			xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
			BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfoRecord);
			map=new HashMap();
			map.put("xuyuContentCardInfoRecord", xuyuContentCardInfoRecord);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardInfoRecordDao.insertInfo(map);
			
			// 调用批量
			synInfoBatchService.setMobileStartFlag("1");
		}else{
			// 下级代理商出库
			logger.info("下级代理商出库");
			// 修改当前卡段区间的info的agency
			XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
			xuyuContentCardInfo.setAgency(xuyuContentCardMgrVo.getAgency());
			xuyuContentCardInfo.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
			HashMap map=new HashMap();
			map.put("xuyuContentCardInfo", xuyuContentCardInfo);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardInfoDao.updateInfo(map);
			// 插入明细表
			XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
			xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
			BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
			map=new HashMap();
			map.put("xuyuContentCardInfoRecord", xuyuContentCardInfoRecord);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardInfoRecordDao.insertInfo(map);
		}
		
	}
	/**
	 * 不使用卡段出库
	 */
	private void noUseAccessNum(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo){
		// 类型判定是否为总部出库
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			String accessNums=xuyuContentCardMgrVo.getAccessNums();
			if(accessNums!=null&&!SystemConstants.STRINGEMPTY.equals(accessNums)){
				String[] accessNumStr=accessNums.split(";");
				for (int i = 0; i < accessNumStr.length; i++) {
					XuyuContentCardMgr xuyuContentCardMgr=xuyuContentCardMgrDao.find(accessNumStr[i]);
					xuyuContentCardMgr.setManagerFlag(SystemConstants.STRING_YES);
					xuyuContentCardMgr.setAgency(xuyuContentCardMgrVo.getAgency());
					xuyuContentCardMgr.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
					xuyuContentCardMgrDao.update(xuyuContentCardMgr);
					
					// 插入info表
					XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
					BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfo);
					xuyuContentCardInfo.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfo"));
					xuyuContentCardInfoDao.insert(xuyuContentCardInfo);
					
					// 插入明细表
					XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
					BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfoRecord);
					xuyuContentCardInfoRecord.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfoRecord"));
					xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
					xuyuContentCardInfoRecordDao.insert(xuyuContentCardInfoRecord);
				}
				// 调用批量
				synInfoBatchService.setMobileStartFlag("1");
			}
		}else{
			// 下级代理商出库
		    logger.info("下级代理商出库");
			String accessNums=xuyuContentCardMgrVo.getAccessNums();
			if(accessNums!=null&&!SystemConstants.STRINGEMPTY.equals(accessNums)){
				String[] accessNumStr=accessNums.split(";");
				for (int i = 0; i < accessNumStr.length; i++) {
					XuyuContentCardInfo xuyuContentCardInfo=xuyuContentCardInfoDao.find(accessNumStr[i]);
					xuyuContentCardInfo.setAgency(xuyuContentCardMgrVo.getAgency());
					xuyuContentCardInfo.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
					xuyuContentCardInfoDao.update(xuyuContentCardInfo);
					
					// 插入明细表
					XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
					BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
					xuyuContentCardInfoRecord.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfoRecord"));
					xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
					xuyuContentCardInfoRecordDao.insert(xuyuContentCardInfoRecord);
				}
			}
		}
		
	}
    
	/**
	 * 划卡
	 */
	@Override
	public void setOwner(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) {
		try {
			// 先判断是否为卡段处理
			if(xuyuContentCardMgrVo!=null){
				if(SystemConstants.STRING_YES.equals(xuyuContentCardMgrVo.getYesNo())){
					setOwnerUse(xuyuContentCardMgrVo);
				}else{
					setOwnerNoUse(xuyuContentCardMgrVo);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
    
	/**
	 * 不通过卡段划卡
	 * @param xuyuContentCardMgrVo
	 */
	private void setOwnerNoUse(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) {
		// 类型判定是否为总部出库
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			
		}else{
			// 下级代理商划卡
		    logger.info("下级代理商划卡");
			String accessNums=xuyuContentCardMgrVo.getAccessNums();
			if(accessNums!=null&&!SystemConstants.STRINGEMPTY.equals(accessNums)){
				String[] accessNumStr=accessNums.split(";");
				for (int i = 0; i < accessNumStr.length; i++) {
					XuyuContentCardInfo xuyuContentCardInfo=xuyuContentCardInfoDao.find(accessNumStr[i]);
					xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_YES);
					xuyuContentCardInfo.setOwner(xuyuContentCardMgrVo.getOwner());
					xuyuContentCardInfoDao.update(xuyuContentCardInfo);
					
					// 插入明细表
					XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
					BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
					xuyuContentCardInfoRecord.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfoRecord"));
					xuyuContentCardInfoRecordDao.insert(xuyuContentCardInfoRecord);
				}
			}
		}
	}
    
	/**
	 * 通过卡段划卡
	 * @param xuyuContentCardMgrVo
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	private void setOwnerUse(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) {
		// 类型判定是否为总部出库
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
				
		}else{
			// 下级代理商划卡
		    logger.info("下级代理商划卡");
		    // 修改info表
 			XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
 			xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_YES);
			xuyuContentCardInfo.setOwner(xuyuContentCardMgrVo.getOwner());
 			HashMap map=new HashMap();
 			map.put("xuyuContentCardInfo", xuyuContentCardInfo);
 			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
 			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
 			xuyuContentCardInfoDao.updateInfo(map);
 			// 插入明细表
 			XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
 			BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
 			map=new HashMap();
 			map.put("xuyuContentCardInfoRecord", xuyuContentCardInfoRecord);
 			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
 			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
 			xuyuContentCardInfoRecordDao.insertOwner(map);
			
		}
	}

}
