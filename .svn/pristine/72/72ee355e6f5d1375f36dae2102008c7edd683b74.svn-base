package com.xuyurepos.service.impl.manager;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.xuyurepos.common.constants.SystemConstants;
import com.xuyurepos.common.exception.CustomException;
import com.xuyurepos.common.log.LoggerFactory;
import com.xuyurepos.common.page.PageModel;
import com.xuyurepos.common.util.DateUtil;
import com.xuyurepos.common.util.StringUtil;
import com.xuyurepos.dao.manager.XuyuContentCardInfoDao;
import com.xuyurepos.dao.manager.XuyuContentCardInfoRecordDao;
import com.xuyurepos.dao.manager.XuyuContentCardMgrDao;
import com.xuyurepos.entity.manager.XuyuContentCardInfo;
import com.xuyurepos.entity.manager.XuyuContentCardInfoRecord;
import com.xuyurepos.entity.manager.XuyuContentCardMgr;
import com.xuyurepos.entity.system.SystemUser;
import com.xuyurepos.service.intergration.batch.SynInfoBatchService;
import com.xuyurepos.service.manager.XuyuContentCardMgrSelfService;
import com.xuyurepos.service.operamanager.XuyuOwnerInfoService;
import com.xuyurepos.service.system.SystemOrgService;
import com.xuyurepos.vo.manager.XuyuContentCardMgrSelfVo;
import com.xuyurepos.vo.manager.XuyuContentCardMgrVo;
import com.xuyurepos.vo.operamanager.XuyuOwnerInfoVo;
import com.xuyurepos.vo.system.SystemOrgVo;
@Transactional
@Service
public class XuyuContentCardMgrSelfServiceImpl implements XuyuContentCardMgrSelfService{
	
	Logger logger=LoggerFactory.getInstance().getLogger(XuyuContentCardMgrSelfServiceImpl.class);

	@Resource
	private XuyuContentCardMgrDao xuyuContentCardMgrDao;
	@Resource
	private XuyuContentCardInfoDao xuyuContentCardInfoDao;
	@Resource
	private XuyuContentCardInfoRecordDao xuyuContentCardInfoRecordDao;
	@Resource
	private SystemOrgService systemOrgService;
	@Resource
	private SynInfoBatchService synInfoBatchService;
	@Resource
	private XuyuOwnerInfoService xuyuOwnerInfoService;

	@SuppressWarnings({ "rawtypes", "unchecked" })
	@Override
	public void findList(PageModel pageModel) {
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			// 总部用户不需要划卡
			pageModel.setRows(xuyuContentCardMgrDao.selectListWithPage(pageModel));
		    pageModel.setTotal(xuyuContentCardMgrDao.selectCountWithPage(pageModel));
		    logger.info("总部用户查询");
		}else{
			// 代理商用户开始划卡
			logger.info("代理商划卡查询");
			XuyuContentCardMgrSelfVo xuyuContentCardMgrSelfVo=(XuyuContentCardMgrSelfVo)pageModel.getQueryObj();
			String agency=systemOrgVo.getOrgId();
			if(systemOrgVo.getOrgLevel().equals("2")){
				agency=agency.substring(0,agency.length()-1);
			}
			logger.info("agency:"+agency);
			xuyuContentCardMgrSelfVo.setAgency(agency);
			pageModel.setRows(xuyuContentCardInfoDao.selectUserListWithPage(pageModel));
		    pageModel.setTotal(xuyuContentCardInfoDao.selectUserCountWithPage(pageModel));
		}
		
	}

	@Override
	public XuyuContentCardMgrVo find(String id) {
		XuyuContentCardMgrVo xuyuContentCardMgrVo=new XuyuContentCardMgrVo();
		if(!StringUtil.isEmpty(id)){
			XuyuContentCardMgr xuyuContentCardMgr=xuyuContentCardMgrDao.find(id);
			BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardMgrVo);
			xuyuContentCardMgrVo.setId(id);
		}
		return xuyuContentCardMgrVo;
	}
    
	/**
	 * 批量出库
	 * @throws CustomException 
	 */
	@Override
	public void selfAll(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) throws CustomException {
		// 先判断是否为卡段处理
		if(xuyuContentCardMgrVo!=null){
			if(SystemConstants.STRING_YES.equals(xuyuContentCardMgrVo.getYesNo())){
				useAccessNum(xuyuContentCardMgrVo);
			}else{
				noUseAccessNum(xuyuContentCardMgrVo);
			}
		}
	}
	
	/**
	 * 使用卡段出库
	 * @param xuyuContentCardMgrVo
	 * @throws CustomException 
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	private void useAccessNum(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) throws CustomException{
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			// 校验出库卡段是否超过10W
			int result=xuyuContentCardMgrDao.findCount( xuyuContentCardMgrVo.getAccessNumStart(), xuyuContentCardMgrVo.getAccessNumEnd());
			if(result>100000){
				throw new CustomException("目前系统支持的出库数据一次最多为100000");
			}else{
				// 类型判定是否为总部出库
				XuyuContentCardMgr xuyuContentCardMgr=new XuyuContentCardMgr();
				xuyuContentCardMgr.setManagerFlag(SystemConstants.STRING_YES);
				xuyuContentCardMgr.setAgency(xuyuContentCardMgrVo.getAgency());
				xuyuContentCardMgr.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
				xuyuContentCardMgr.setEstablishDate(new Date());
				HashMap map=new HashMap();
				map.put("xuyuContentCardMgr", xuyuContentCardMgr);
				map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
				map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
				xuyuContentCardMgrDao.updateInfo(map);
				// 插入info表
				XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
				BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfo);
				map=new HashMap();
				map.put("xuyuContentCardInfo", xuyuContentCardInfo);
				map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
				map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
				xuyuContentCardInfoDao.insertInfo(map);
				// 插入明细表
				XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
				xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
				BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfoRecord);
				map=new HashMap();
				map.put("xuyuContentCardInfoRecord", xuyuContentCardInfoRecord);
				map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
				map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
				xuyuContentCardInfoRecordDao.insertInfo(map);
				
				// 调用批量
				synInfoBatchService.setMobileStartFlag("1");
			}
		}else{
			// 首先判断所有卡是否都属于本代理商
			HashMap map=new HashMap();
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			map.put("agency", orgId);
			int j=xuyuContentCardInfoDao.checkAgency(map);
			if(j==0){
				// 校验出库卡段是否超过10W
				int result=xuyuContentCardInfoDao.findCount( xuyuContentCardMgrVo.getAccessNumStart(), xuyuContentCardMgrVo.getAccessNumEnd());
				if(result>100000){
					// 下级代理商出库
					logger.info("下级代理商出库");
					// 修改当前卡段区间的info的agency
					XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
					xuyuContentCardInfo.setAgency(xuyuContentCardMgrVo.getAgency());
					xuyuContentCardInfo.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
					map=new HashMap();
					map.put("xuyuContentCardInfo", xuyuContentCardInfo);
					map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
					map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
					xuyuContentCardInfoDao.updateInfo(map);
					// 插入明细表
					XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
					xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
					BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
					map=new HashMap();
					map.put("xuyuContentCardInfoRecord", xuyuContentCardInfoRecord);
					map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
					map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
					xuyuContentCardInfoRecordDao.insertInfo(map);
				}else{
					throw new CustomException("目前系统支持的出库数据一次最多为100000");
				}
			}else{
				throw new CustomException("当前卡段中的卡存在不属于本代理商的，不能出库");
			}
		}
		
	}
	/**
	 * 不使用卡段出库
	 */
	private void noUseAccessNum(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo){
		// 类型判定是否为总部出库
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
		String orgId=systemUser.getOrgId();
		// 查找机构信息
		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
		if(systemOrgVo.getOrgLevel().equals("1")){
			String accessNums=xuyuContentCardMgrVo.getAccessNums();
			if(accessNums!=null&&!SystemConstants.STRINGEMPTY.equals(accessNums)){
				String[] accessNumStr=accessNums.split(";");
				for (int i = 0; i < accessNumStr.length; i++) {
					XuyuContentCardMgr xuyuContentCardMgr=xuyuContentCardMgrDao.find(accessNumStr[i]);
					xuyuContentCardMgr.setManagerFlag(SystemConstants.STRING_YES);
					xuyuContentCardMgr.setAgency(xuyuContentCardMgrVo.getAgency());
					xuyuContentCardMgr.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
					xuyuContentCardMgr.setEstablishDate(new Date());
					xuyuContentCardMgrDao.update(xuyuContentCardMgr);
					
					// 插入info表
					XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
					BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfo);
					xuyuContentCardInfo.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfo"));
					xuyuContentCardInfoDao.insert(xuyuContentCardInfo);
					
					// 插入明细表
					XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
					BeanUtils.copyProperties(xuyuContentCardMgr, xuyuContentCardInfoRecord);
					xuyuContentCardInfoRecord.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfoRecord"));
					xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
					xuyuContentCardInfoRecordDao.insert(xuyuContentCardInfoRecord);
				}
				// 调用批量
				synInfoBatchService.setMobileStartFlag("1");
			}
		}else{
			// 下级代理商出库
			String accessNums=xuyuContentCardMgrVo.getAccessNums();
			if(accessNums!=null&&!SystemConstants.STRINGEMPTY.equals(accessNums)){
				String[] accessNumStr=accessNums.split(";");
				for (int i = 0; i < accessNumStr.length; i++) {
					XuyuContentCardInfo xuyuContentCardInfo=xuyuContentCardInfoDao.find(accessNumStr[i]);
					xuyuContentCardInfo.setAgency(xuyuContentCardMgrVo.getAgency());
					xuyuContentCardInfo.setAgencyName(xuyuContentCardMgrVo.getAgencyName());
					xuyuContentCardInfoDao.update(xuyuContentCardInfo);
					
					// 插入明细表
					XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
					BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
					xuyuContentCardInfoRecord.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfoRecord"));
					xuyuContentCardInfoRecord.setPrice(BigDecimal.valueOf(Double.valueOf(xuyuContentCardMgrVo.getUnitCost())));
					xuyuContentCardInfoRecordDao.insert(xuyuContentCardInfoRecord);
				}
			}
		}
		
	}
    
	/**
	 * 划卡
	 * @throws CustomException 
	 */
	@Override
	public void setOwner(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) throws CustomException {
		// 先判断是否为卡段处理
		if(xuyuContentCardMgrVo!=null){
			if(SystemConstants.STRING_YES.equals(xuyuContentCardMgrVo.getYesNo())){
				setOwnerUse(xuyuContentCardMgrVo);
			}else{
				setOwnerNoUse(xuyuContentCardMgrVo);
			}
		}
	}
    
	/**
	 * 不通过卡段划卡
	 * @param xuyuContentCardMgrVo
	 * @throws CustomException 
	 */
	private void setOwnerNoUse(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) throws CustomException {
		// 类型判定是否为总部出库
//		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
//		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
//		String orgId=systemUser.getOrgId();
//		// 查找机构信息
//		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
//		if(systemOrgVo.getOrgLevel().equals("1")){
//			throw new CustomException("总部用户不能划卡");
//		}else{}
		String accessNums=xuyuContentCardMgrVo.getAccessNums();
		// 计算没有沉默期和测试的日期运算
		String silentType=xuyuContentCardMgrVo.getSilentType();
		String haveTest=xuyuContentCardMgrVo.getHaveTest();
		if(accessNums!=null&&!SystemConstants.STRINGEMPTY.equals(accessNums)){
			String[] accessNumStr=accessNums.split(";");
			for (int i = 0; i < accessNumStr.length; i++) {
				XuyuContentCardInfo xuyuContentCardInfo=xuyuContentCardInfoDao.find(accessNumStr[i]);
				xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_YES);
				xuyuContentCardInfo.setOwner(xuyuContentCardMgrVo.getOwner());
				// 判定是否为群组划卡
				if(SystemConstants.STRING_YES.equals(xuyuContentCardMgrVo.getGroupYesNo())){
					xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_YES);
					xuyuContentCardInfo.setOwner(xuyuContentCardMgrVo.getOwner());
					// 查询群组信息
					XuyuOwnerInfoVo xuyuOwnerInfoVo=xuyuOwnerInfoService.find(xuyuContentCardMgrVo.getOwner());
					xuyuContentCardInfo.setComboType(xuyuOwnerInfoVo.getComboType());
					xuyuContentCardInfo.setComnoName(xuyuOwnerInfoVo.getComboName());
					xuyuContentCardInfo.setPaymentType(xuyuOwnerInfoVo.getPayType());
					xuyuContentCardInfo.setTestType(xuyuOwnerInfoVo.getHaveTest());
					xuyuContentCardInfo.setWaitType(xuyuOwnerInfoVo.getSilentType());
				}else{
					xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_NO);
					xuyuContentCardInfo.setOwner(SystemConstants.STRINGEMPTY);
					xuyuContentCardInfo.setComboType(xuyuContentCardMgrVo.getComboType());
					xuyuContentCardInfo.setComnoName(xuyuContentCardMgrVo.getComboName());
					xuyuContentCardInfo.setPaymentType(xuyuContentCardMgrVo.getPayType());
					xuyuContentCardInfo.setTestType(xuyuContentCardMgrVo.getHaveTest());
					xuyuContentCardInfo.setWaitType(xuyuContentCardMgrVo.getSilentType());
				}
				// TOTAL_GPRS
				BigDecimal totalGprs=BigDecimal.valueOf(Double.valueOf(xuyuContentCardInfo.getComboType()) *Double.valueOf(xuyuContentCardInfo.getComnoName()));
				xuyuContentCardInfo.setTotalGprs(totalGprs);
				if(SystemConstants.STRINGEMPTY.equals(silentType)
				   &&SystemConstants.STRINGEMPTY.equals(haveTest)
				){
					xuyuContentCardInfo.setActivateDate(new Date());
					xuyuContentCardInfo.setWaitDate(new Date());
					// 计算满期日期
					try {
						Date deadlineDate=DateUtil.getLastMonthdate(xuyuContentCardInfo.getActivateDate(), Integer.valueOf(xuyuContentCardInfo.getComboType()));
						xuyuContentCardInfo.setDeadlineDate(deadlineDate);
					} catch (Exception e) {
						e.printStackTrace();
						throw new CustomException("满期日期计算失败");
					}
				}else{
					if(!SystemConstants.STRINGEMPTY.equals(silentType)){
						// 有沉默期则计算沉默期到期时间
						try {
							Date waitDate=DateUtil.getLastMonthdate(xuyuContentCardInfo.getEstablishDate(), Integer.valueOf(xuyuContentCardInfo.getWaitType()));
							xuyuContentCardInfo.setWaitDate(waitDate);
						} catch (Exception e) {
							e.printStackTrace();
							throw new CustomException("沉默期到期时间计算失败");
						}
					}
				}
				xuyuContentCardInfoDao.update(xuyuContentCardInfo);
				
				// 插入明细表
				XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
				BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
				xuyuContentCardInfoRecord.setId(xuyuContentCardInfoRecordDao.getSequence("cardInfoRecord"));
				xuyuContentCardInfoRecordDao.insert(xuyuContentCardInfoRecord);
			}
		}
	}
    
	/**
	 * 通过卡段划卡
	 * @param xuyuContentCardMgrVo
	 * @throws CustomException 
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	private void setOwnerUse(XuyuContentCardMgrSelfVo xuyuContentCardMgrVo) throws CustomException {
		// 类型判定是否为总部出库
//		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
//		SystemUser systemUser=(SystemUser) request.getSession().getAttribute("systemUser");
//		String orgId=systemUser.getOrgId();
//		// 查找机构信息
//		SystemOrgVo systemOrgVo=systemOrgService.find(orgId);
//		if(systemOrgVo.getOrgLevel().equals("1")){
//			throw new CustomException("总部用户不能划卡");	
//		}else{}

		// 首先判断所有卡是否都属于本代理商
		HashMap map=new HashMap();
//		map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
//		map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
//		map.put("agency", orgId);
//		int j=xuyuContentCardInfoDao.checkAgency(map);
//		if(j==0){}else{
//			throw new CustomException("当前卡段中的卡存在不属于本代理商的，不能出库");
//		}

		// 下级代理商划卡
//	    logger.info("下级代理商划卡");
	    // 修改info表
	    XuyuContentCardInfo xuyuContentCardInfo=new XuyuContentCardInfo();
//		xuyuContentCardInfo.setAgency(orgId);
//		xuyuContentCardInfo.setAgencyName(systemOrgVo.getOrgName());
		// 判定是否为群组划卡
		if(SystemConstants.STRING_YES.equals(xuyuContentCardMgrVo.getGroupYesNo())){
			xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_YES);
			xuyuContentCardInfo.setOwner(xuyuContentCardMgrVo.getOwner());
			// 查询群组信息
			XuyuOwnerInfoVo xuyuOwnerInfoVo=xuyuOwnerInfoService.find(xuyuContentCardMgrVo.getOwner());
			xuyuContentCardInfo.setComboType(xuyuOwnerInfoVo.getComboType());
			xuyuContentCardInfo.setComnoName(xuyuOwnerInfoVo.getComboName());
			xuyuContentCardInfo.setPaymentType(xuyuOwnerInfoVo.getPayType());
			xuyuContentCardInfo.setTestType(xuyuOwnerInfoVo.getHaveTest());
			xuyuContentCardInfo.setWaitType(xuyuOwnerInfoVo.getSilentType());
		}else{
			xuyuContentCardInfo.setMgrOwnFlag(SystemConstants.STRING_NO);
			xuyuContentCardInfo.setOwner(SystemConstants.STRINGEMPTY);
			xuyuContentCardInfo.setComboType(xuyuContentCardMgrVo.getComboType());
			xuyuContentCardInfo.setComnoName(xuyuContentCardMgrVo.getComboName());
			xuyuContentCardInfo.setPaymentType(xuyuContentCardMgrVo.getPayType());
			xuyuContentCardInfo.setTestType(xuyuContentCardMgrVo.getHaveTest());
			xuyuContentCardInfo.setWaitType(xuyuContentCardMgrVo.getSilentType());
		}
		// TOTAL_GPRS
		BigDecimal totalGprs=BigDecimal.valueOf(Double.valueOf(xuyuContentCardInfo.getComboType()) *Double.valueOf(xuyuContentCardInfo.getComnoName()));
		xuyuContentCardInfo.setTotalGprs(totalGprs);
			map=new HashMap();
			map.put("xuyuContentCardInfo", xuyuContentCardInfo);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardInfoDao.updateInfoOwner(map);
			// 插入并且更新临时表
			xuyuContentCardInfoDao.truncateTable();
			xuyuContentCardInfoDao.insertInfoOwnerTemp(map);
			xuyuContentCardInfoDao.updateInfoOwnerDate(map);
			// 插入明细表
			XuyuContentCardInfoRecord xuyuContentCardInfoRecord=new XuyuContentCardInfoRecord();
			BeanUtils.copyProperties(xuyuContentCardInfo, xuyuContentCardInfoRecord);
			map=new HashMap();
			map.put("xuyuContentCardInfoRecord", xuyuContentCardInfoRecord);
			map.put("accessNumStart", xuyuContentCardMgrVo.getAccessNumStart());
			map.put("accessNumEnd", xuyuContentCardMgrVo.getAccessNumEnd());
			xuyuContentCardInfoRecordDao.insertOwner(map);
	}

}
