/**
 * Project Name:XuYuRepos
 * File Name:SynInfoBatchService.java
 * Package Name:com.xuyurepos.service.intergration.batch
 * Date:2019年4月2日下午1:24:36
 * Copyright (c) 2019, chenzhou1025@126.com All Rights Reserved.
 *
*/

package com.xuyurepos.service.intergration.batch;

import java.net.InetAddress;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import org.apache.commons.dbcp2.BasicDataSource;
import org.apache.commons.lang3.StringUtils;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xuyurepos.dao.batch.CardStateChangeDao;
import com.xuyurepos.entity.manager.XuyuContentCardInfo;
import com.xuyurepos.service.intergration.facade.SynInfoFacadeService;
import com.xuyurepos.service.intergration.facade.SynInfoJSFacadeService;

/**
 * ClassName:SynInfoBatchService <br/>
 * Function: TODO ADD FUNCTION. <br/>
 * Reason: TODO ADD REASON. <br/>
 * Date: 2019年4月2日 下午1:24:36 <br/>
 * 
 * @author zhangliang
 * @version
 * @since JDK 1.8
 * @see
 */
@Service
@Transactional
public class SynInfoBatchService {

	static Logger logger = LoggerFactory.getLogger(SynInfoBatchService.class);

	@Autowired
	private CardStateChangeDao cardInfoDao;

	private ExecutorService execute = Executors.newFixedThreadPool(50);
	
    private  ScheduledExecutorService service = Executors.newScheduledThreadPool(50);


	private ExecutorService executeTask = Executors.newFixedThreadPool(3);

	@Autowired
	private SqlSessionFactory sqlSessionFactory;
	


	private String mobileStartFlag = "";
	
	private String uncomStartFlag="";
	
	private String teleStartFlag="";

	
	
	
	public String getMobileStartFlag() {
		return mobileStartFlag;
	}

	public void setMobileStartFlag(String mobileStartFlag) {
		this.mobileStartFlag = mobileStartFlag;
	}

	public String getUncomStartFlag() {
		return uncomStartFlag;
	}

	public void setUncomStartFlag(String uncomStartFlag) {
		this.uncomStartFlag = uncomStartFlag;
	}

	public String getTeleStartFlag() {
		return teleStartFlag;
	}

	public void setTeleStartFlag(String teleStartFlag) {
		this.teleStartFlag = teleStartFlag;
	}

	public void sync() {
		try {
			String address = InetAddress.getLocalHost().getHostAddress();
			logger.info("当前服务器IP地址：" + address);
//				if(!address.equals("172.19.182.120")) {
//					return ;
//				}
			long mobileLimit=80000;
			long uncomLimit=3000;
			long teleLimit=30000;
			updateCardState(mobileLimit,uncomLimit,teleLimit);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private List queryData(int flag, long  limitSize) {
		List<XuyuContentCardInfo> cardInfoList = cardInfoDao.queryData(flag, limitSize);
		return cardInfoList;
	}

	public void updateCardState(long mobileLimit,long uncomLimit,long teleLimit) {

		executeTask.execute(new Runnable() {
			
			@Override
			public void run() {
				
				addMobileTask(mobileLimit);
				
			}
		});


		
		executeTask.execute(new Runnable() {
			
			@Override
			public void run() {
				
				addUncomTask(uncomLimit);
				
			}
		});
		

		
       executeTask.execute(new Runnable() {
		
		@Override
		public void run() {
			addTeleTask(teleLimit);
		}
	});

	}
	/**
	 * 
	 * addMobileTask:(添加移动跑批任务). <br/>  
	 * TODO(这里描述这个方法适用条件 – 可选).<br/>  
	 * TODO(这里描述这个方法的执行流程 – 可选).<br/>  
	 * TODO(这里描述这个方法的使用方法 – 可选).<br/>  
	 * TODO(这里描述这个方法的注意事项 – 可选).<br/>  
	 *  
	 * @author 27569  
	 * @param limitSize  
	 * @since JDK 1.6
	 */
	public void addMobileTask(long limitSize) {
		
		if(this.getMobileStartFlag().equals("0")) {
			return ;
		}
		
		List<XuyuContentCardInfo> mobileCardInfoList = queryData(1, limitSize);

		if(mobileCardInfoList.size()==0) {
			this.setMobileStartFlag("0");
			return ;
		}
		
		long  delay=0;
		for (XuyuContentCardInfo info : mobileCardInfoList) {
			service.schedule(new Runnable() {
				@Override
				public void run() {
					updateMobileCardInfo(info);
				}
			},delay,TimeUnit.MILLISECONDS);
			delay+=20;
		}
	}
	
	/**
	 * 
	 * addUncomTask:(添加联通跑批任务). <br/>  
	 * TODO(这里描述这个方法适用条件 – 可选).<br/>  
	 * TODO(这里描述这个方法的执行流程 – 可选).<br/>  
	 * TODO(这里描述这个方法的使用方法 – 可选).<br/>  
	 * TODO(这里描述这个方法的注意事项 – 可选).<br/>  
	 *  
	 * @author 27569  
	 * @param limitSize  
	 * @since JDK 1.6
	 */
	public void addUncomTask(long  limitSize) {
		
		if(this.getUncomStartFlag().equals("0")) {
			return;
		}
		
		List<XuyuContentCardInfo> uncomCardInfoList = queryData(2, limitSize);

		if(uncomCardInfoList.size()==0) {
			this.setUncomStartFlag("0");
			return ;
		}
		
		 long delay=0;
		
		for (XuyuContentCardInfo info : uncomCardInfoList) {
			service.schedule(new Runnable() {
				@Override
				public void run() {
					updateUncomCardInfo(info);
				}
		}, delay, TimeUnit.MILLISECONDS);
			delay+=500;
		
		}
	}
	
	/**
	 * 
	 * addTeleTask:(添加电信跑批任务). <br/>  
	 * TODO(这里描述这个方法适用条件 – 可选).<br/>  
	 * TODO(这里描述这个方法的执行流程 – 可选).<br/>  
	 * TODO(这里描述这个方法的使用方法 – 可选).<br/>  
	 * TODO(这里描述这个方法的注意事项 – 可选).<br/>  
	 *  
	 * @author 27569  
	 * @param limitSize  
	 * @since JDK 1.6
	 */
	public void addTeleTask(long  limitSize) {
		
		if(this.getTeleStartFlag().equals("0")) {
			return ;
		}
		
		List<XuyuContentCardInfo> teleCardInfoList = queryData(3, limitSize);
		
		if(teleCardInfoList.size()==0) {
			this.setTeleStartFlag("0");
			return ;
		}

		long delay=0;
		
		for (XuyuContentCardInfo info : teleCardInfoList) {
			service.schedule(new Runnable() {
				@Override
				public void run() {
					updateTeleCardInfo(info);
				}
			},delay,TimeUnit.MILLISECONDS);
			delay+=50;
		}
	}
	
	/**
	 * 
	 * updateMobileCardInfo:(更新移动卡状态). <br/>  
	 * TODO(这里描述这个方法适用条件 – 可选).<br/>  
	 * TODO(这里描述这个方法的执行流程 – 可选).<br/>  
	 * TODO(这里描述这个方法的使用方法 – 可选).<br/>  
	 * TODO(这里描述这个方法的注意事项 – 可选).<br/>  
	 *  
	 * @author 27569  
	 * @param info  
	 * @since JDK 1.6
	 */
	public void updateMobileCardInfo(XuyuContentCardInfo info) {

		SqlSession sqlSession=sqlSessionFactory.openSession();
		
		try {
			CardStateChangeDao dao=sqlSession.getMapper(CardStateChangeDao.class);

			String id = info.getId();
			String ownerPlace = info.getOwnerPlace();
			String status = "";
			String accessNum = info.getAccessNum();
			if (ownerPlace.equals("1") || ownerPlace.equals("2")) {
				status = SynInfoJSFacadeService.getInstance().mobileUserStatusQuery(accessNum, ownerPlace);
			} else {
				status = SynInfoFacadeService.getInstance().mobileUserStatusQuery(accessNum);
			}
			if (StringUtils.isNotBlank(status) && !"null".equals(status)) {
				dao.updateDataState(id, status);
				sqlSession.commit();
			}
		} finally {
			sqlSession.close();
		}

	}

	/**
	 * 
	 * updateUncomCardInfo:(更新联通卡状态). <br/>  
	 * TODO(这里描述这个方法适用条件 – 可选).<br/>  
	 * TODO(这里描述这个方法的执行流程 – 可选).<br/>  
	 * TODO(这里描述这个方法的使用方法 – 可选).<br/>  
	 * TODO(这里描述这个方法的注意事项 – 可选).<br/>  
	 *  
	 * @author 27569  
	 * @param info  
	 * @since JDK 1.6
	 */
	public void updateUncomCardInfo(XuyuContentCardInfo info) {

    	SqlSession sqlSession=sqlSessionFactory.openSession();
    	try {
			CardStateChangeDao dao=sqlSession.getMapper(CardStateChangeDao.class);
			
			String id = info.getId();
			String accid = info.getIccid();
			String status = SynInfoFacadeService.getInstance().unicomUserStatusQuery(accid);
			if (StringUtils.isNotBlank(status) && !"null".equals(status)) {
				dao.updateDataState(id, status);
				sqlSession.commit();
			}
		} finally {
			sqlSession.close();
		}  

	}

	/**
	 * 
	 * updateTeleCardInfo:(更新电信卡状态). <br/>  
	 * TODO(这里描述这个方法适用条件 – 可选).<br/>  
	 * TODO(这里描述这个方法的执行流程 – 可选).<br/>  
	 * TODO(这里描述这个方法的使用方法 – 可选).<br/>  
	 * TODO(这里描述这个方法的注意事项 – 可选).<br/>  
	 *  
	 * @author 27569  
	 * @param info  
	 * @since JDK 1.6
	 */
	public void updateTeleCardInfo(XuyuContentCardInfo info) {

		SqlSession sqlSession=sqlSessionFactory.openSession();
		try {
			CardStateChangeDao dao=sqlSession.getMapper(CardStateChangeDao.class);

			String id = info.getId();
			String accessNum = info.getAccessNum();
			String status = SynInfoFacadeService.getInstance().telecomUserStatusQuery(accessNum);
			if (StringUtils.isNotBlank(status) && !"null".equals(status)) {
				dao.updateDataState(id, status);
				sqlSession.commit();
			}
		} finally {
			sqlSession.close();
		}

	}
	
	
	
}
